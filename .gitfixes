client.py:7: 
client.py:8: ts=0
client.py:9: last=0
client.py:10:+lapsed=time.time()
client.py:11:+delay_s=0.1
client.py:12: 
client.py:13: def onStateChanged(state, msg):
client.py:14:     global ts
client.py:15:     global last
client.py:16:+    global lapsed
client.py:17:     global isConnected
client.py:18:+    global delay_s
client.py:19:+    print(state)
client.py:20:     if state == "CONNECTING":
client.py:21:        print("Client:-- Waiting for connection...")
client.py:22:     elif state == "CONNECTED":
client.py:23:-       print("Client:-- Connection estabished.")
client.py:23:+        print("Client:-- Connection estabished.")
client.py:24:+        # if time.time() - lapsed > delay_s * 10:
client.py:25:+            # client.sendMessage("end")
client.py:26:     elif state == "DISCONNECTED":
client.py:27:        print("Client:-- Connection lost.")
client.py:28:        isConnected = False
client.py:33:        ts = float(data[-1])
client.py:34:        print("deltat:",ts-last)
client.py:35:        last=ts
client.py:36:+       lapsed=time.time()
client.py:37: 
client.py:38: client = TCPClient(IP_ADDRESS, IP_PORT, stateChanged = onStateChanged, isVerbose = False)
client.py:39: rc = client.connect()
client.py:40: msg="go"
client.py:41: cnt = 0
client.py:42:-delay_s = 0.1
client.py:42: if rc:
client.py:43:     isConnected = True
client.py:44:     while isConnected:
client.py:45:         print("Client:-- Sending command: go...")
client.py:46:         client.sendMessage(msg)
client.py:47:         time.sleep(delay_s)
client.py:48:-        if cnt == 10:
client.py:48:-            msg="end"
client.py:48:+        # if cnt == 10:
client.py:49:+            # msg="end"
client.py:50:         cnt+=1
client.py:51:     print("Done")    
client.py:52: else:
server.py:6: IP_PORT = 22000
server.py:7: 
server.py:8: def onStateChanged(state, msg):
server.py:9:+    print(state)
server.py:10:     if state == "LISTENING":
server.py:11:         print("Server:-- Listening...")
server.py:12:     elif state == "CONNECTED":
